"use strict";(self.webpackChunkdocudesk_docs=self.webpackChunkdocudesk_docs||[]).push([[227],{6674:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api/document-reports","title":"Document Reports","description":"DocuDesk provides comprehensive document analysis through its reporting system. This page explains how document reports work and how they can help you ensure your documents meet privacy, accessibility, and readability standards.","source":"@site/docs/api/document-reports.md","sourceDirName":"api","slug":"/api/document-reports","permalink":"/docs/api/document-reports","draft":false,"unlisted":false,"editUrl":"https://github.com/conductionnl/docudesk/tree/main/website/docs/api/document-reports.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Document Reports"},"sidebar":"tutorialSidebar","previous":{"title":"Document Processing","permalink":"/docs/api/document-processing"},"next":{"title":"Anonymization Logs","permalink":"/docs/api/anonymization-logs"}}');var t=i(4848),r=i(8453);const o={sidebar_position:5,title:"Document Reports"},l="Document Reports",c={},a=[{value:"Overview",id:"overview",level:2},{value:"Automatic Report Generation",id:"automatic-report-generation",level:2},{value:"Report Generation Workflow",id:"report-generation-workflow",level:3},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Processing Modes",id:"processing-modes",level:3},{value:"Synchronous Processing",id:"synchronous-processing",level:4},{value:"Asynchronous Processing (Recommended for Production)",id:"asynchronous-processing-recommended-for-production",level:4},{value:"Document Report Object",id:"document-report-object",level:2},{value:"Key Properties",id:"key-properties",level:3},{value:"Report Status Values",id:"report-status-values",level:3},{value:"Handling Non-Text Documents",id:"handling-non-text-documents",level:2},{value:"Unsupported Document Types",id:"unsupported-document-types",level:3},{value:"How DocuDesk Handles These Files",id:"how-docudesk-handles-these-files",level:3},{value:"Example Report for Non-Text Document",id:"example-report-for-non-text-document",level:3},{value:"Best Practices for Non-Text Documents",id:"best-practices-for-non-text-documents",level:3},{value:"Report Creation Process",id:"report-creation-process",level:2},{value:"Simplified Event Handling",id:"simplified-event-handling",level:3},{value:"Report Update Logic",id:"report-update-logic",level:3},{value:"Analysis Types",id:"analysis-types",level:2},{value:"Anonymization Analysis",id:"anonymization-analysis",level:3},{value:"WCAG Compliance Analysis",id:"wcag-compliance-analysis",level:3},{value:"Language Level Analysis",id:"language-level-analysis",level:3},{value:"Data Categories",id:"data-categories",level:3},{value:"Anonymization Status",id:"anonymization-status",level:3},{value:"Legal Basis",id:"legal-basis",level:3},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"API Flow",id:"api-flow",level:3},{value:"List Document Reports",id:"list-document-reports",level:3},{value:"Create Document Report",id:"create-document-report",level:3},{value:"Get Document Report",id:"get-document-report",level:3},{value:"Update Document Report",id:"update-document-report",level:3},{value:"Get Latest Report for Node",id:"get-latest-report-for-node",level:3},{value:"Get Report Configuration",id:"get-report-configuration",level:3},{value:"Save Report Configuration",id:"save-report-configuration",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"GDPR Compliance",id:"gdpr-compliance",level:3},{value:"Accessibility Compliance",id:"accessibility-compliance",level:3},{value:"Content Readability",id:"content-readability",level:3},{value:"Integration with Document Processing",id:"integration-with-document-processing",level:2},{value:"Examples",id:"examples",level:2},{value:"Generating a Document Report",id:"generating-a-document-report",level:3},{value:"Configuring Report Generation",id:"configuring-report-generation",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"File Event Handling",id:"file-event-handling",level:2},{value:"Efficient File Change Detection",id:"efficient-file-change-detection",level:3},{value:"Report Processing Workflow",id:"report-processing-workflow",level:2},{value:"Report Processing Steps",id:"report-processing-steps",level:3},{value:"Background Job Processing",id:"background-job-processing",level:2},{value:"Background Job Sequence",id:"background-job-sequence",level:3},{value:"Entity Detection and Risk Scoring",id:"entity-detection-and-risk-scoring",level:2},{value:"Entity Detection Process",id:"entity-detection-process",level:3},{value:"Risk Score Calculation",id:"risk-score-calculation",level:3},{value:"Risk Assessment Visualization",id:"risk-assessment-visualization",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"document-reports",children:"Document Reports"})}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk provides comprehensive document analysis through its reporting system. This page explains how document reports work and how they can help you ensure your documents meet privacy, accessibility, and readability standards."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The Document Reports system in DocuDesk enables you to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Identify files containing personal data"}),"\n",(0,t.jsx)(n.li,{children:"Categorize the types of personal data present"}),"\n",(0,t.jsx)(n.li,{children:"Track anonymization status"}),"\n",(0,t.jsx)(n.li,{children:"Manage retention periods"}),"\n",(0,t.jsx)(n.li,{children:"Document the legal basis for processing"}),"\n",(0,t.jsx)(n.li,{children:"Maintain an audit trail of privacy-related actions"}),"\n",(0,t.jsx)(n.li,{children:"Analyze documents for personal data that may require anonymization"}),"\n",(0,t.jsx)(n.li,{children:"Check documents for WCAG accessibility compliance"}),"\n",(0,t.jsx)(n.li,{children:"Assess the language level and readability of documents"}),"\n",(0,t.jsx)(n.li,{children:"Track document changes through file hashing"}),"\n",(0,t.jsx)(n.li,{children:"Generate detailed reports with actionable recommendations"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"automatic-report-generation",children:"Automatic Report Generation"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk can automatically generate reports for documents as they are uploaded or modified in Nextcloud. This process works as follows:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"When a file is created or modified in Nextcloud, DocuDesk detects the event"}),"\n",(0,t.jsx)(n.li,{children:"A document log entry is created to maintain an audit trail"}),"\n",(0,t.jsx)(n.li,{children:"If reporting is enabled, DocuDesk checks if a report already exists for the current version of the file"}),"\n",(0,t.jsx)(n.li,{children:"If no report exists (or the file has changed), a new report is created with a 'pending' status"}),"\n",(0,t.jsxs)(n.li,{children:["Depending on the configuration, the report is either:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Processed immediately (synchronous processing)"}),"\n",(0,t.jsx)(n.li,{children:"Queued for processing by a background job (asynchronous processing)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"The report is updated with the analysis results once processing is complete"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"report-generation-workflow",children:"Report Generation Workflow"}),"\n",(0,t.jsx)(n.p,{children:"The following sequence diagram illustrates the report generation process:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant User\n    participant Nextcloud\n    participant FileEventListener\n    participant ReportingService\n    participant ObjectService\n    participant PresidioAPI\n\n    User->>Nextcloud: Upload/Modify Document\n    Nextcloud->>FileEventListener: Trigger NodeCreatedEvent/NodeWrittenEvent\n    FileEventListener->>ReportingService: createReport()\n    ReportingService->>ReportingService: calculateFileHash()\n    ReportingService->>ObjectService: Check for existing report\n    \n    alt No existing report or file changed\n        ReportingService->>ObjectService: Save new report (status: pending)\n        \n        alt Synchronous Processing\n            ReportingService->>ReportingService: processExistingReport()\n            ReportingService->>ObjectService: Update report (status: processing)\n            ReportingService->>PresidioAPI: Analyze document\n            PresidioAPI--\x3e>ReportingService: Return analysis results\n            ReportingService->>ObjectService: Update report with results (status: completed)\n        else Asynchronous Processing\n            Note over ReportingService: Report remains in pending status\n        end\n    else Existing report found\n        ObjectService--\x3e>ReportingService: Return existing report\n    end\n    \n    ReportingService--\x3e>FileEventListener: Return report\n    FileEventListener--\x3e>Nextcloud: Continue file operation\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsx)(n.p,{children:"The report generation process can be configured through the DocuDesk settings page:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Enable Reporting"}),": Turn automatic report generation on or off"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Enable Anonymization"}),": Turn automatic anonymization of sensitive data on or off"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Synchronous Processing"}),": Choose between immediate processing or background job processing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Confidence Threshold"}),": Set the minimum confidence level for entity detection (0-100%)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Store Original Text"}),": Choose whether to store the original document text in reports"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"processing-modes",children:"Processing Modes"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk supports two processing modes for report generation:"}),"\n",(0,t.jsx)(n.h4,{id:"synchronous-processing",children:"Synchronous Processing"}),"\n",(0,t.jsx)(n.p,{children:"In synchronous mode, reports are generated immediately when a file is created or modified. This provides instant feedback but may impact performance for large files or high-traffic environments."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant User\n    participant FileEventListener\n    participant ReportingService\n    participant PresidioAPI\n    participant ObjectService\n\n    User->>FileEventListener: File Created/Modified\n    FileEventListener->>ReportingService: createReport(processNow=true)\n    ReportingService->>ObjectService: Save report (status: pending)\n    ReportingService->>ReportingService: processExistingReport()\n    ReportingService->>ObjectService: Update report (status: processing)\n    ReportingService->>PresidioAPI: Send document for analysis\n    PresidioAPI--\x3e>ReportingService: Return analysis results\n    ReportingService->>ObjectService: Update report (status: completed)\n    ReportingService--\x3e>FileEventListener: Return completed report\n    FileEventListener--\x3e>User: File operation completes\n"})}),"\n",(0,t.jsx)(n.h4,{id:"asynchronous-processing-recommended-for-production",children:"Asynchronous Processing (Recommended for Production)"}),"\n",(0,t.jsx)(n.p,{children:"In asynchronous mode, reports are queued for processing by a background job that runs periodically. This is more efficient for large environments as it:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Reduces the impact on user experience"}),"\n",(0,t.jsx)(n.li,{children:"Allows for better resource management"}),"\n",(0,t.jsx)(n.li,{children:"Handles large volumes of documents more effectively"}),"\n",(0,t.jsx)(n.li,{children:"Prevents timeouts when processing large files"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant User\n    participant FileEventListener\n    participant ReportingService\n    participant ObjectService\n    participant BackgroundJob\n    participant PresidioAPI\n\n    User->>FileEventListener: File Created/Modified\n    FileEventListener->>ReportingService: createReport(processNow=false)\n    ReportingService->>ObjectService: Save report (status: pending)\n    ReportingService--\x3e>FileEventListener: Return pending report\n    FileEventListener--\x3e>User: File operation completes immediately\n\n    Note over BackgroundJob: Runs every 15 minutes\n    BackgroundJob->>ReportingService: processPendingReports()\n    ReportingService->>ObjectService: Fetch pending reports\n    ObjectService--\x3e>ReportingService: Return pending reports\n    \n    loop For each pending report\n        ReportingService->>ObjectService: Update report (status: processing)\n        ReportingService->>PresidioAPI: Send document for analysis\n        PresidioAPI--\x3e>ReportingService: Return analysis results\n        ReportingService->>ObjectService: Update report (status: completed)\n    end\n"})}),"\n",(0,t.jsx)(n.p,{children:"The background job processes pending reports in batches, updating their status as they are completed."}),"\n",(0,t.jsx)(n.h2,{id:"document-report-object",children:"Document Report Object"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"DocumentReport"})," object is the core component for document analysis. It contains the results of various analyses performed on a document, including anonymization, WCAG compliance, and language level assessments."]}),"\n",(0,t.jsx)(n.h3,{id:"key-properties",children:"Key Properties"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"id"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Unique identifier for the report"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"nodeId"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Nextcloud node ID of the document"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"fileName"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Name of the document"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"filePath"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Full path to the document in Nextcloud"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"fileType"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"MIME type of the document (e.g., application/pdf)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"fileExtension"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"File extension (e.g., pdf, docx)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"fileSize"}),(0,t.jsx)(n.td,{children:"integer"}),(0,t.jsx)(n.td,{children:"Size of the file in bytes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"fileHash"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Hash of the file content to determine if a new report is needed"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"fileText"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"The extracted text content from the document, used for analysis"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"status"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Status of the report generation (pending, processing, completed, failed)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"errorMessage"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Error message if report processing failed"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"riskScore"}),(0,t.jsx)(n.td,{children:"float"}),(0,t.jsx)(n.td,{children:"Numerical score indicating overall risk level (0-100)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"riskLevel"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Risk level classification (low, medium, high) based on risk score, or unknown if report is not completed"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"anonymizationResults"}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Results of anonymization analysis"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"entities"}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"List of entities found made during anonymization"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"wcagComplianceResults"}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Results of WCAG compliance analysis"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"languageLevelResults"}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"Results of language level analysis"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"retentionPeriod"}),(0,t.jsx)(n.td,{children:"integer"}),(0,t.jsx)(n.td,{children:"Retention period in days (0 for indefinite)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"retentionExpiry"}),(0,t.jsx)(n.td,{children:"date-time"}),(0,t.jsx)(n.td,{children:"Date when the retention period expires"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"legalBasis"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Legal basis for processing the data under GDPR"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dataController"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Name of the data controller"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"report-status-values",children:"Report Status Values"}),"\n",(0,t.jsx)(n.p,{children:"Reports can have the following status values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"pending"}),": The report has been created but not yet processed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"processing"}),": The report is currently being processed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"completed"}),": The report has been successfully processed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"failed"}),": The report processing failed (check errorMessage for details)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"handling-non-text-documents",children:"Handling Non-Text Documents"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk's anonymization capabilities rely on text extraction from documents. However, certain file types cannot be processed for text content, which affects how DocuDesk handles these documents."}),"\n",(0,t.jsx)(n.h3,{id:"unsupported-document-types",children:"Unsupported Document Types"}),"\n",(0,t.jsx)(n.p,{children:"The following document types typically cannot be processed for text extraction:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Images"}),": JPEG, PNG, GIF, BMP, WebP, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Videos"}),": MP4, AVI, MOV, WebM, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Audio"}),": MP3, WAV, FLAC, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Binary files"}),": EXE, DLL, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Encrypted documents"}),": Documents with password protection or encryption"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scanned documents without OCR"}),": Image-based PDFs without text layers"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"how-docudesk-handles-these-files",children:"How DocuDesk Handles These Files"}),"\n",(0,t.jsx)(n.p,{children:"When DocuDesk encounters a file that cannot be processed for text extraction:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"A report is still created for the document"}),"\n",(0,t.jsx)(n.li,{children:"The report status is set to 'completed'"}),"\n",(0,t.jsxs)(n.li,{children:["The anonymizationResults object will include:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"containsPersonalData: false"})," (since no text could be analyzed)"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"anonymizationStatus: 'not_required'"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"entitiesFound: []"})," (empty array)"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"totalEntitiesFound: 0"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"The report will include an informational note indicating that text extraction was not possible"}),"\n",(0,t.jsx)(n.li,{children:"The riskLevel will typically be set to 'unknown' since risk assessment requires text analysis"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-report-for-non-text-document",children:"Example Report for Non-Text Document"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "id": "abc123",\n  "nodeId": "456",\n  "fileName": "image.jpg",\n  "filePath": "/path/to/image.jpg",\n  "fileType": "image/jpeg",\n  "fileExtension": "jpg",\n  "fileSize": 1024000,\n  "fileHash": "a1b2c3d4e5f6",\n  "status": "completed",\n  "riskLevel": "unknown",\n  "anonymizationResults": {\n    "containsPersonalData": false,\n    "entitiesFound": [],\n    "totalEntitiesFound": 0,\n    "dataCategories": [],\n    "anonymizationStatus": "not_required"\n  },\n  "errorMessage": "No text could be extracted from this document type"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"best-practices-for-non-text-documents",children:"Best Practices for Non-Text Documents"}),"\n",(0,t.jsx)(n.p,{children:"When working with non-text documents that might contain sensitive information:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manual Review"}),": Visually inspect images and videos for personal data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Metadata Cleaning"}),": Remove EXIF data from images which may contain location or device information"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OCR Processing"}),": Consider using OCR tools on scanned documents before uploading"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Alternative Formats"}),": When possible, provide text-based alternatives for important image-based content"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom Tagging"}),": Use DocuDesk's manual tagging features to mark non-text documents that contain sensitive information"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"report-creation-process",children:"Report Creation Process"}),"\n",(0,t.jsx)(n.p,{children:"When a file event occurs (creation or modification), DocuDesk follows these steps to create or update reports:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"flowchart TD\n    A[File Event Detected] --\x3e B[FileEventListener.handleNodeEvent]\n    B --\x3e C[createReportForNode]\n    C --\x3e D[ReportingService.createReportFromNode]\n    \n    D --\x3e E{Is reporting enabled?}\n    E --\x3e|No| F[Skip report creation]\n    E --\x3e|Yes| G[Extract node properties]\n    \n    G --\x3e H{Does node have ETag?}\n    H --\x3e|Yes| I[Use ETag as hash]\n    H --\x3e|No| J[Calculate content hash]\n    \n    I --\x3e K[Check for existing report]\n    J --\x3e K\n    \n    K --\x3e L{Existing report found?}\n    \n    L --\x3e|No| M[Create new report]\n    L --\x3e|Yes, same hash| N[Return existing report]\n    L --\x3e|Yes, different hash| O[Update existing report]\n    \n    O --\x3e P{Synchronous processing?}\n    M --\x3e P\n    \n    P --\x3e|Yes| Q[Process report immediately]\n    P --\x3e|No| R[Save pending report]\n    \n    Q --\x3e S[Return completed report]\n    R --\x3e T[Return pending report]\n    N --\x3e U[Return existing report]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"simplified-event-handling",children:"Simplified Event Handling"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk has streamlined the report creation process by:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Centralizing Decision Logic"}),": All decisions about whether to create reports and how to process them are now made in the ReportingService"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automatic Processing Mode"}),": The system automatically determines whether to process reports synchronously based on configuration settings"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Single Responsibility"}),": Event listeners simply pass events to the ReportingService without making any decisions"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This approach ensures consistent behavior and makes the system easier to maintain and extend."}),"\n",(0,t.jsx)(n.h3,{id:"report-update-logic",children:"Report Update Logic"}),"\n",(0,t.jsx)(n.p,{children:"When a file is modified, DocuDesk updates the existing report rather than creating a new one:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:'sequenceDiagram\n    participant FL as FileEventListener\n    participant RS as ReportingService\n    participant OS as ObjectService\n    \n    FL->>RS: createReportFromNode(node)\n    RS->>RS: Check if reporting is enabled\n    \n    alt Reporting Enabled\n        RS->>OS: Get existing reports for node\n        OS--\x3e>RS: Return existing reports\n        RS->>RS: Determine processing mode (synchronous/asynchronous)\n        \n        alt Existing Report Found with Different Hash\n            RS->>RS: Update report with new hash\n            RS->>RS: Reset status to "pending"\n            RS->>OS: Save updated report\n            \n            alt Synchronous Processing Enabled\n                RS->>RS: Process report immediately\n            end\n            \n        else Existing Report Found with Same Hash\n            RS->>RS: Return existing report (no changes needed)\n        else No Existing Report\n            RS->>RS: Create new report\n        end\n    else Reporting Disabled\n        RS--\x3e>FL: Return null (no report created)\n    end\n'})}),"\n",(0,t.jsx)(n.p,{children:"This logic ensures that reports are always up-to-date with the latest version of a file, while avoiding unnecessary processing when the file content hasn't changed."}),"\n",(0,t.jsx)(n.h2,{id:"analysis-types",children:"Analysis Types"}),"\n",(0,t.jsx)(n.h3,{id:"anonymization-analysis",children:"Anonymization Analysis"}),"\n",(0,t.jsx)(n.p,{children:"The anonymization analysis identifies personal data in documents that may need to be anonymized for GDPR compliance. It provides:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Detection of various types of personal data (names, addresses, emails, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Count and categorization of personal data instances"}),"\n",(0,t.jsx)(n.li,{children:"Suggestions for anonymizing personal data"}),"\n",(0,t.jsx)(n.li,{children:"Confidence scores for detected entities"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"wcag-compliance-analysis",children:"WCAG Compliance Analysis"}),"\n",(0,t.jsx)(n.p,{children:"The WCAG compliance analysis checks documents for accessibility issues according to the Web Content Accessibility Guidelines. It provides:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Overall compliance level (A, AA, AAA, or non-compliant)"}),"\n",(0,t.jsx)(n.li,{children:"Breakdown of issues by severity and WCAG principle"}),"\n",(0,t.jsx)(n.li,{children:"Detailed list of accessibility issues with recommendations"}),"\n",(0,t.jsx)(n.li,{children:"Overall compliance score"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"language-level-analysis",children:"Language Level Analysis"}),"\n",(0,t.jsx)(n.p,{children:"The language level analysis assesses the readability and complexity of document text. It provides:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Primary language detection"}),"\n",(0,t.jsx)(n.li,{children:"Various readability scores (Flesch-Kincaid, SMOG Index, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Text complexity metrics"}),"\n",(0,t.jsx)(n.li,{children:"Estimated education level required to understand the text"}),"\n",(0,t.jsx)(n.li,{children:"Suggestions for improving language clarity"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"data-categories",children:"Data Categories"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk recognizes the following categories of personal data:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"name"}),": Names of individuals"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"address"}),": Physical addresses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"email"}),": Email addresses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"phone"}),": Phone numbers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"id_number"}),": Identification numbers (passport, SSN, etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"financial"}),": Financial information (bank accounts, credit cards, etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"health"}),": Health-related information"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"biometric"}),": Biometric data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"location"}),": Location data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"other"}),": Other types of personal data"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"anonymization-status",children:"Anonymization Status"}),"\n",(0,t.jsx)(n.p,{children:"The anonymization status can be one of the following:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"not_required"}),": The file does not require anonymization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"pending"}),": Anonymization is pending"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"in_progress"}),": Anonymization is in progress"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"completed"}),": Anonymization is completed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"failed"}),": Anonymization failed"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"legal-basis",children:"Legal Basis"}),"\n",(0,t.jsx)(n.p,{children:"Under GDPR, personal data processing must have a legal basis. DocuDesk supports tracking the following legal bases:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"consent"}),": The data subject has given consent"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"contract"}),": Processing is necessary for a contract"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"legal_obligation"}),": Processing is necessary for a legal obligation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"vital_interests"}),": Processing is necessary to protect vital interests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"public_interest"}),": Processing is necessary for a task in the public interest"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"legitimate_interests"}),": Processing is necessary for legitimate interests"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk provides the following API endpoints for managing document reports:"}),"\n",(0,t.jsx)(n.h3,{id:"api-flow",children:"API Flow"}),"\n",(0,t.jsx)(n.p,{children:"The following diagram illustrates the typical flow when using the report API:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant Client\n    participant ReportController\n    participant ReportingService\n    participant ObjectService\n    \n    Client->>ReportController: POST /api/v1/reports (Create Report)\n    ReportController->>ReportingService: createReport()\n    ReportingService->>ObjectService: Save report\n    ObjectService--\x3e>ReportingService: Return saved report\n    ReportingService--\x3e>ReportController: Return report\n    ReportController--\x3e>Client: Return JSON response\n    \n    Client->>ReportController: GET /api/v1/reports/{id} (Get Report)\n    ReportController->>ObjectService: Get report by ID\n    ObjectService--\x3e>ReportController: Return report\n    ReportController--\x3e>Client: Return JSON response\n    \n    Client->>ReportController: POST /api/v1/reports/{id}/process (Process Report)\n    ReportController->>ReportingService: processExistingReport()\n    ReportingService->>ObjectService: Update report status\n    ReportingService->>PresidioAPI: Analyze document\n    PresidioAPI--\x3e>ReportingService: Return analysis results\n    ReportingService->>ObjectService: Update report with results\n    ObjectService--\x3e>ReportingService: Return updated report\n    ReportingService--\x3e>ReportController: Return processed report\n    ReportController--\x3e>Client: Return JSON response\n"})}),"\n",(0,t.jsx)(n.h3,{id:"list-document-reports",children:"List Document Reports"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"GET /apps/docudesk/api/v1/reports\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns a list of document reports. You can filter the reports by:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"node_id"}),": Filter reports by Nextcloud node ID"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"status"}),": Filter reports by status"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"create-document-report",children:"Create Document Report"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"POST /apps/docudesk/api/v1/reports\n"})}),"\n",(0,t.jsx)(n.p,{children:"Creates a new document report. You need to specify:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"node_id"}),": Nextcloud node ID of the document"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"file_name"}),": Name of the document"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"file_path"}),": Full path to the document in Nextcloud"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"file_type"}),": MIME type of the document"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"file_extension"}),": File extension of the document"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"file_size"}),": Size of the file in bytes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"file_hash"}),": Hash of the file content"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"analysis_types"}),": Types of analysis to perform (anonymization, wcag_compliance, language_level)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"get-document-report",children:"Get Document Report"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"GET /apps/docudesk/api/v1/reports/{reportId}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns a specific document report by ID."}),"\n",(0,t.jsx)(n.h3,{id:"update-document-report",children:"Update Document Report"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"PUT /apps/docudesk/api/v1/reports/{reportId}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Updates a specific document report."}),"\n",(0,t.jsx)(n.h3,{id:"get-latest-report-for-node",children:"Get Latest Report for Node"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"GET /apps/docudesk/api/v1/reports/node/{nodeId}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the latest document report for a specific Nextcloud node."}),"\n",(0,t.jsx)(n.h3,{id:"get-report-configuration",children:"Get Report Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"GET /apps/docudesk/api/v1/settings/report\n"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the current report configuration settings."}),"\n",(0,t.jsx)(n.h3,{id:"save-report-configuration",children:"Save Report Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"POST /apps/docudesk/api/v1/settings/report\n"})}),"\n",(0,t.jsx)(n.p,{children:"Updates the report configuration settings. You can specify:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"enable_reporting"}),": Whether to enable automatic report generation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"enable_anonymization"}),": Whether to enable automatic anonymization of sensitive data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"synchronous_processing"}),": Whether to process reports immediately"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"confidence_threshold"}),": Minimum confidence level for entity detection (0-1)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"store_original_text"}),": Whether to store the original document text in reports"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsx)(n.h3,{id:"gdpr-compliance",children:"GDPR Compliance"}),"\n",(0,t.jsx)(n.p,{children:"Document reports help ensure GDPR compliance by:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Identifying documents containing personal data"}),"\n",(0,t.jsx)(n.li,{children:"Suggesting anonymization methods for sensitive information"}),"\n",(0,t.jsx)(n.li,{children:"Tracking anonymization status"}),"\n",(0,t.jsx)(n.li,{children:"Providing an audit trail of privacy-related actions"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"accessibility-compliance",children:"Accessibility Compliance"}),"\n",(0,t.jsx)(n.p,{children:"Document reports help ensure accessibility compliance by:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Checking documents against WCAG standards"}),"\n",(0,t.jsx)(n.li,{children:"Identifying accessibility issues"}),"\n",(0,t.jsx)(n.li,{children:"Providing recommendations for fixing issues"}),"\n",(0,t.jsx)(n.li,{children:"Tracking compliance levels over time"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"content-readability",children:"Content Readability"}),"\n",(0,t.jsx)(n.p,{children:"Document reports help improve content readability by:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Assessing the language level of documents"}),"\n",(0,t.jsx)(n.li,{children:"Identifying complex language"}),"\n",(0,t.jsx)(n.li,{children:"Suggesting simplifications"}),"\n",(0,t.jsx)(n.li,{children:"Ensuring content is appropriate for the target audience"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-document-processing",children:"Integration with Document Processing"}),"\n",(0,t.jsx)(n.p,{children:"The document reports system integrates with DocuDesk's document processing capabilities:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Reports can trigger automatic document processing (e.g., anonymization)"}),"\n",(0,t.jsx)(n.li,{children:"Processing results are reflected in updated reports"}),"\n",(0,t.jsx)(n.li,{children:"Reports provide a history of document transformations"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"generating-a-document-report",children:"Generating a Document Report"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"// Create a new report\n$reportData = [\n    'node_id' => '12345',\n    'file_name' => 'important-document.pdf',\n    'file_path' => '/Documents/important-document.pdf',\n    'file_type' => 'application/pdf',\n    'file_extension' => 'pdf',\n    'file_size' => 1024567,\n    'file_hash' => 'a1b2c3d4e5f6g7h8i9j0',\n    'analysis_types' => ['anonymization', 'wcag_compliance', 'language_level']\n];\n\n$response = $client->post('/apps/docudesk/api/v1/reports', [\n    'json' => $reportData\n]);\n\n$report = json_decode($response->getBody(), true);\n$reportId = $report['id'];\n\n// Check report status\n$response = $client->get('/apps/docudesk/api/v1/reports/' . $reportId);\n$report = json_decode($response->getBody(), true);\n\nif ($report['status'] === 'completed') {\n    // Process report results\n    $anonymizationResults = $report['anonymization_results'];\n    $wcagResults = $report['wcag_compliance_results'];\n    $languageResults = $report['language_level_results'];\n    \n    // Take action based on results\n    if ($anonymizationResults['contains_personal_data']) {\n        // Handle personal data\n    }\n    \n    if ($wcagResults['compliance_level'] !== 'AA' && $wcagResults['compliance_level'] !== 'AAA') {\n        // Address accessibility issues\n    }\n    \n    if ($languageResults['education_level'] === 'graduate' || $languageResults['education_level'] === 'professional') {\n        // Simplify language\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configuring-report-generation",children:"Configuring Report Generation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"// Update report configuration\n$configData = [\n    'enable_reporting' => true,\n    'enable_anonymization' => true,\n    'synchronous_processing' => false, // Use background jobs\n    'confidence_threshold' => 0.7,\n    'store_original_text' => true\n];\n\n$response = $client->post('/apps/docudesk/api/v1/settings/report', [\n    'json' => $configData\n]);\n\n// Get current report configuration\n$response = $client->get('/apps/docudesk/api/v1/settings/report');\n$config = json_decode($response->getBody(), true);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Asynchronous Processing"}),": For production environments, use asynchronous processing to reduce the impact on performance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Regular Analysis"}),": Regularly analyze important documents to ensure continued compliance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hash-Based Updates"}),": Use file hashing to determine when documents have changed and need re-analysis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Comprehensive Analysis"}),": Use all three analysis types for critical documents"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Action on Results"}),": Implement a workflow to address issues identified in reports"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Version Tracking"}),": Keep reports for different versions of documents to track improvements"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Confidence Threshold"}),": Adjust the confidence threshold based on your needs (higher for fewer false positives, lower for more comprehensive detection)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"Document reports provide a powerful way to ensure your documents meet privacy, accessibility, and readability standards. By automatically analyzing documents as they are created or modified, you can maintain compliance with regulations and improve the quality of your content without manual intervention."}),"\n",(0,t.jsx)(n.h2,{id:"file-event-handling",children:"File Event Handling"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk uses Nextcloud's event system to detect file operations and trigger report generation. The following diagram illustrates how file events are handled:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"flowchart TD\n    subgraph Nextcloud\n        A[File Operation] --\x3e|Triggers| B[Event Dispatcher]\n    end\n    \n    subgraph DocuDesk\n        B --\x3e|Dispatches to| C[FileEventListener]\n        \n        C --\x3e|Validates| D[Is it a file?]\n        D --\x3e|No| E[Ignore event]\n        D --\x3e|Yes| F[Process event]\n        \n        F --\x3e|Handles| G[NodeCreatedEvent]\n        F --\x3e|Handles| H[NodeWrittenEvent]\n        F --\x3e|Handles| I[NodeDeletedEvent]\n        F --\x3e|Handles| J[NodeTouchedEvent]\n        \n        G --\x3e|If reporting enabled| K[createReportForNode]\n        H --\x3e|If reporting enabled| K\n        \n        K --\x3e|Calls| L[ReportingService.createReportFromNode]\n        \n        L --\x3e|Validates node is file| M[Extract node properties]\n        M --\x3e|Check for ETag| N{ETag available?}\n        \n        N --\x3e|Yes| O[Use ETag as hash]\n        N --\x3e|No| P[Calculate hash]\n        \n        O --\x3e Q[Call createReport]\n        P --\x3e Q\n        \n        Q --\x3e|If processNow=true| R[Process immediately]\n        Q --\x3e|If processNow=false| S[Save pending report]\n    end\n"})}),"\n",(0,t.jsx)(n.p,{children:"The event listener handles different types of file events:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NodeCreatedEvent"}),": Triggered when a new file is created"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NodeWrittenEvent"}),": Triggered when a file's content is modified"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NodeDeletedEvent"}),": Triggered when a file is deleted"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NodeTouchedEvent"}),": Triggered when a file's metadata is updated"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For file creation and modification events, the listener creates reports if reporting is enabled."}),"\n",(0,t.jsx)(n.h3,{id:"efficient-file-change-detection",children:"Efficient File Change Detection"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk uses Nextcloud's ETag (Entity Tag) system when available to efficiently detect file changes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant FL as FileEventListener\n    participant RS as ReportingService\n    participant Node as Nextcloud Node\n    \n    FL->>RS: createReportFromNode(node, processNow)\n    RS->>Node: Check if getEtag() method exists\n    \n    alt ETag available\n        Node--\x3e>RS: Return ETag\n        RS->>RS: Use ETag as file hash\n    else ETag not available\n        RS->>RS: Calculate hash from file content\n    end\n    \n    RS->>RS: Check for existing report with same hash\n    \n    alt No existing report or hash changed\n        RS->>RS: Create new report\n    else Existing report found\n        RS->>RS: Return existing report\n    end\n"})}),"\n",(0,t.jsx)(n.p,{children:"Using ETag provides several advantages:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Efficiency"}),": Avoids reading file content for large files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Accuracy"}),": ETags change whenever file content changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance"}),": Reduces CPU and I/O overhead"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"report-processing-workflow",children:"Report Processing Workflow"}),"\n",(0,t.jsx)(n.p,{children:"The report processing workflow involves several steps and state transitions. The following diagram illustrates the lifecycle of a report:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"stateDiagram-v2\n    [*] --\x3e Pending: Report Created\n    Pending --\x3e Processing: processExistingReport called\n    Processing --\x3e Completed: Analysis successful\n    Processing --\x3e Failed: Analysis error\n    Completed --\x3e [*]\n    Failed --\x3e [*]\n    \n    note right of Pending\n        Reports in pending state are\n        processed by the background job\n    end note\n    \n    note right of Processing\n        Report is being analyzed by\n        Presidio API\n    end note\n    \n    note right of Completed\n        Report contains analysis results\n        and is ready for viewing\n    end note\n    \n    note right of Failed\n        Report contains error information\n        and may be retried\n    end note\n"})}),"\n",(0,t.jsx)(n.h3,{id:"report-processing-steps",children:"Report Processing Steps"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ReportingService"})," handles report processing through the following steps:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:'sequenceDiagram\n    participant Caller as Caller (EventListener/Controller/BackgroundJob)\n    participant RS as ReportingService\n    participant OS as ObjectService\n    participant PA as Presidio API\n    \n    Caller->>RS: processExistingReport(report, filePath, fileName)\n    RS->>OS: Update report status to "processing"\n    RS->>RS: generateReport(filePath, documentId, documentTitle)\n    RS->>PA: Send document for analysis\n    \n    alt Analysis Successful\n        PA--\x3e>RS: Return analysis results\n        RS->>OS: Update report with results and status "completed"\n        OS--\x3e>RS: Return updated report\n    else Analysis Failed\n        PA--\x3e>RS: Return error\n        RS->>OS: Update report with error and status "failed"\n        OS--\x3e>RS: Return updated report\n    end\n    \n    RS--\x3e>Caller: Return processed report\n'})}),"\n",(0,t.jsx)(n.p,{children:"This centralized processing approach ensures consistent handling of reports regardless of how they are triggered (file events, API requests, or background jobs)."}),"\n",(0,t.jsx)(n.h2,{id:"background-job-processing",children:"Background Job Processing"}),"\n",(0,t.jsxs)(n.p,{children:["DocuDesk uses a background job (",(0,t.jsx)(n.code,{children:"ProcessPendingReports"}),") to process pending reports asynchronously. This job runs periodically (every 15 minutes by default) and processes a batch of pending reports."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"flowchart TD\n    A[ProcessPendingReports job] --\x3e|Runs every 15 minutes| B{Is reporting enabled?}\n    B --\x3e|No| C[Skip processing]\n    B --\x3e|Yes| D[Call ReportingService.processPendingReports]\n    \n    D --\x3e|Fetch pending reports| E[ObjectService]\n    E --\x3e|Return pending reports| D\n    \n    D --\x3e|For each report| F{Valid report?}\n    F --\x3e|No| G[Mark as failed]\n    F --\x3e|Yes| H[Process report]\n    \n    H --\x3e|Call| I[ReportingService.processExistingReport]\n    I --\x3e|Update report status| J[ObjectService]\n    I --\x3e|Analyze document| K[Presidio API]\n    K --\x3e|Return results| I\n    I --\x3e|Update report with results| J\n"})}),"\n",(0,t.jsx)(n.h3,{id:"background-job-sequence",children:"Background Job Sequence"}),"\n",(0,t.jsx)(n.p,{children:"The following sequence diagram illustrates how the background job processes pending reports:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:'sequenceDiagram\n    participant Cron as Nextcloud Cron\n    participant PPR as ProcessPendingReports\n    participant RS as ReportingService\n    participant OS as ObjectService\n    participant PA as Presidio API\n    \n    Cron->>PPR: Execute job (every 15 minutes)\n    PPR->>RS: processPendingReports(MAX_REPORTS_PER_RUN)\n    RS->>OS: Get reports with status "pending"\n    OS--\x3e>RS: Return pending reports\n    \n    loop For each pending report\n        RS->>RS: Validate report (nodeId, filePath, fileName)\n        \n        alt Invalid report\n            RS->>OS: Update report status to "failed"\n        else Valid report\n            RS->>RS: processExistingReport(report, filePath, fileName)\n            RS->>OS: Update report status to "processing"\n            RS->>PA: Send document for analysis\n            PA--\x3e>RS: Return analysis results\n            RS->>OS: Update report with results and status "completed"\n        end\n    end\n    \n    RS--\x3e>PPR: Return number of processed reports\n    PPR--\x3e>Cron: Job completed\n'})}),"\n",(0,t.jsx)(n.p,{children:"This background processing approach allows DocuDesk to handle large volumes of documents efficiently without impacting user experience."}),"\n",(0,t.jsx)(n.h2,{id:"entity-detection-and-risk-scoring",children:"Entity Detection and Risk Scoring"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk uses the Presidio API to detect entities in documents and calculate risk scores based on the detected entities."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"flowchart TD\n    A[Document Text] --\x3e|Sent to| B[Presidio API]\n    B --\x3e|Analyzes| C[Entity Detection]\n    C --\x3e|Returns| D[Detected Entities]\n    \n    D --\x3e|Input for| E[Risk Score Calculation]\n    \n    subgraph Risk Calculation\n        E --\x3e|Consider| F[Entity Types]\n        E --\x3e|Consider| G[Entity Counts]\n        E --\x3e|Consider| H[Confidence Scores]\n        \n        F --\x3e|Apply| I[Type Weights]\n        G --\x3e|Apply| J[Count Factor]\n        H --\x3e|Apply| K[Confidence Factor]\n        \n        I --\x3e L[Weighted Sum]\n        J --\x3e L\n        K --\x3e L\n        \n        L --\x3e|Normalize| M[Final Risk Score]\n        M --\x3e|Determine| N[Risk Level]\n    end\n    \n    N --\x3e|Categorize as| O[Low/Medium/High/Critical]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"entity-detection-process",children:"Entity Detection Process"}),"\n",(0,t.jsx)(n.p,{children:"The following sequence diagram illustrates how entities are detected and risk scores are calculated:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant RS as ReportingService\n    participant PA as Presidio API\n    \n    RS->>RS: generateReport(filePath, documentId, documentTitle)\n    RS->>RS: extractText(filePath)\n    RS->>RS: extractMetadata(filePath)\n    RS->>PA: analyzeWithPresidio(text, threshold)\n    \n    PA--\x3e>RS: Return detected entities\n    \n    RS->>RS: calculateRiskScore(entities)\n    Note over RS: Apply weights to different entity types\n    Note over RS: Consider number of entities\n    Note over RS: Consider confidence scores\n    \n    RS->>RS: getRiskLevel(riskScore)\n    Note over RS: Categorize as Low/Medium/High/Critical\n    \n    RS->>RS: createReportObject(text, presidioData, documentId, documentTitle, metadata)\n    RS->>OS: saveObject('report', reportData)\n    OS--\x3e>RS: Return saved report\n"})}),"\n",(0,t.jsx)(n.h3,{id:"risk-score-calculation",children:"Risk Score Calculation"}),"\n",(0,t.jsx)(n.p,{children:"The risk score is calculated based on the following factors:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:'pie title Entity Type Weights\n    "PERSON" : 5\n    "EMAIL_ADDRESS" : 8\n    "PHONE_NUMBER" : 7\n    "CREDIT_CARD" : 10\n    "IBAN_CODE" : 9\n    "LOCATION" : 3\n    "DATE_TIME" : 1\n    "OTHER" : 4\n'})}),"\n",(0,t.jsx)(n.p,{children:"The final risk score determines the risk level:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"graph LR\n    A[Risk Score] --\x3e B{Risk Level}\n    B --\x3e|< 20| C[Low]\n    B --\x3e|20-49| D[Medium]\n    B --\x3e|50-79| E[High]\n    B --\x3e|>= 80| F[Critical]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This risk assessment helps organizations prioritize which documents need attention for privacy compliance."}),"\n",(0,t.jsx)(n.h3,{id:"risk-assessment-visualization",children:"Risk Assessment Visualization"}),"\n",(0,t.jsx)(n.p,{children:"DocuDesk provides a comprehensive risk assessment visualization in the document details view. This feature helps users understand:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The overall risk score of a document (0-100)"}),"\n",(0,t.jsx)(n.li,{children:"The risk level classification (Low, Medium, High, Critical)"}),"\n",(0,t.jsx)(n.li,{children:"The specific entities that contribute to the risk assessment"}),"\n",(0,t.jsx)(n.li,{children:"The weight of each entity type in the risk calculation"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The risk visualization includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A color-coded risk score indicator (green for low risk, yellow for medium, red for high/critical)"}),"\n",(0,t.jsx)(n.li,{children:"A detailed breakdown of detected entity types and their counts"}),"\n",(0,t.jsx)(n.li,{children:"An explanation of the risk level and recommended actions"}),"\n",(0,t.jsx)(n.li,{children:"The weighting system used for different types of personal data"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This visual representation helps users quickly identify high-risk documents and understand why they are classified as such, enabling more effective privacy management and compliance efforts."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"flowchart TD\n    A[Document Report] --\x3e B[Risk Assessment Section]\n    B --\x3e C[Risk Score Indicator]\n    B --\x3e D[Risk Level Classification]\n    B --\x3e E[Entity Type Breakdown]\n    B --\x3e F[Risk Explanation]\n    \n    C --\x3e G[Visual Representation]\n    D --\x3e H[Action Recommendations]\n    E --\x3e I[Entity Weights Display]\n    \n    G --\x3e J[Color-Coded Circle]\n    H --\x3e K[Compliance Guidance]\n    I --\x3e L[Prioritized Entity List]\n"})}),"\n",(0,t.jsx)(n.p,{children:"The risk assessment visualization is particularly useful for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Privacy officers reviewing document collections"}),"\n",(0,t.jsx)(n.li,{children:"Compliance teams conducting audits"}),"\n",(0,t.jsx)(n.li,{children:"Content creators checking their documents before publication"}),"\n",(0,t.jsx)(n.li,{children:"Administrators monitoring organizational risk levels"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);